
#include "p16f877a.inc"						
LIST P=16F877A								
RADIX HEX

;Variables						
W 		EQU 0X00 
SEGTM 	EQU 0X29
TM_Sdos	EQU	0X25
TM_MIN	EQU	0X2F
		
ORG 0X00

;Banco 1	
BSF 	STATUS, RP0 ;1
BCF 	STATUS, RP1 ;0							

CLRF	TRISB
CLRF	TRISC
CLRF	TRISD

;Banco 0

BCF 	STATUS, RP0 ;0
BCF 	STATUS, RP1 ;0							
 								
CLRF	PORTB
CLRF	PORTC
CLRF	PORTD

;Banco 1
BSF 	STATUS, RP0 ;1
BCF 	STATUS, RP1 ;0

MOVLW 	B'11010111'	;Lo Cargo a W					
MOVWF 	OPTION_REG	;Lo muevo de W a OPTION_REG						

;Banco 0
BCF		STATUS, RP0;
MOVLW	B'11111111'
MOVWF	PORTB
MOVLW	B'00000000'
MOVWF	PORTC
MOVWF	PORTD
CLRF	TM_Sdos
CLRF	SEGTM

CICLO

	
	CALL  	RETARDO
	CALL	ON_LEDS
	CALL	ADDCONT
	MOVFW	SEGTM	
	SUBLW	0x3C	;LE RESTO 60(3C) a W 
	BTFSC	STATUS,Z	;SI W es 0 entonces 
		CALL	LIMPIEZA	;LIMPIO EL REGISTRO SEGTM (MIVARIABLE)
	
	
		
	
GOTO	CICLO

;Subrutinas de retardo de 1 Segundo
ON_LEDS
	MOVFW	SEGTM
	MOVWF	PORTB
	MOVFW	TM_Sdos
	MOVWF	PORTC
	MOVFW	TM_MIN
	MOVWF	PORTD
	RETURN
RETARDO	;256-(500/255)=
		;256-(100/((4/10000)*256)=255
		BCF 	INTCON,TMR0IF
		MOVLW	D'240'
		MOVWF 	TMR0
		COMPROBAR 
			BTFSS INTCON,TMR0IF ;
			GOTO COMPROBAR
		RETURN
ADDCONT
	MOVFW	SEGTM
	ADDLW	0x01	;le sumo 1 a W
	MOVWF	SEGTM ;0010 0000	
	MOVFW	TM_Sdos
	BTFSS	TM_Sdos,3
		GOTO 	DIP_LED2
		BTFSC	TM_Sdos,0
			ADDLW	0x06
	DIP_LED2
	ADDLW	0x01
	MOVWF	TM_Sdos
	RETURN
LIMPIEZA
	CLRF	SEGTM
	CLRF	TM_Sdos
	CALL 	ADDMIN
	MOVFW	TM_MIN
	SUBLW	B'01100000'	;LE RESTO 60(3C) a W 
	BTFSC	STATUS,Z	;SI W es 0 entonces 
		CLRF	TM_MIN	;LIMPIO EL REGISTRO SEGTM (MIVARIABLE)
	
	RETURN
ADDMIN
	MOVFW	TM_MIN
	BTFSS	TM_MIN,3
		GOTO 	DIP_LED3
		BTFSC	TM_MIN,0
			ADDLW	0x06
	DIP_LED3
	ADDLW	0x01
	MOVWF	TM_MIN
	RETURN
ADDHORA
	
	RETURN
END